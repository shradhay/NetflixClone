{"version":3,"sources":["axios.js","Row.js","request.js","Banner.js","Nav.js","App.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchURL","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","req","data","results","fetchdata","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","key","id","src","poster_path","alt","videoId","opts","height","width","playersVars","autoplay","API_KEY","request","fetchTrending","fetchNetflixOriginal","fetchToprated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oVAKeA,E,OAJCC,EAAMC,OAAO,CACzBC,QAAS,iC,iCC6EEC,MAtEf,YAA2C,IAA7BC,EAA4B,EAA5BA,MAAMC,EAAsB,EAAtBA,SAASC,EAAa,EAAbA,WAAa,EAEXC,mBAAS,IAFE,mBAE/BC,EAF+B,KAExBC,EAFwB,OAGFF,mBAAS,IAHP,mBAG/BG,EAH+B,KAGnBC,EAHmB,KAyCtC,OApCAC,qBAAU,WAAI,4CAEV,4BAAAC,EAAA,sEACsBb,EAAMc,IAAIT,GADhC,cACUU,EADV,OAGIN,EAAUM,EAAIC,KAAKC,SAHvB,kBAIWF,GAJX,4CAFU,uBAAC,WAAD,wBASVG,KAEF,CAACb,IA0BC,yBAAKc,UAAU,OACX,4BAAKf,GACL,yBAAKe,UAAU,eACVX,EAAOY,KAAI,SAAAC,GACR,OACA,yBACAC,QAAS,kBAtBN,SAACD,GACZX,EACAC,EAAc,IAIdY,KAAkB,OAALF,QAAK,IAALA,OAAA,EAAAA,EAAOG,OAAQ,IAC3BC,MAAK,SAAAC,GACC,IAAMC,EAAY,IAAIC,gBAAiB,IAAIC,IAAIH,GAAKI,QACpDnB,EAAiBgB,EAAUb,IAAI,SAGrCiB,OAAM,SAAAC,GAAK,OAAGC,QAAQC,IAAIF,MAULG,CAAYd,IAC1Be,IAAKf,EAAMgB,GACXlB,UAAS,qBAAgBb,GAAc,mBACvCgC,IAAG,UApDR,uCAoDQ,OAECjB,EAAMkB,aAAmCC,IAAKnB,EAAMG,WAM/Dd,GAAc,kBAAC,IAAD,CACf+B,QAAS/B,EACTgC,KA3CM,CACVC,OAAO,MACPC,MAAM,OACNC,YAAY,CAERC,SAAS,QChCfC,G,MAAS,oCAaAC,EAZC,CAEZC,cAAa,oCAA+BF,GAC5CG,qBAAqB,uBAAD,OAAwBH,EAAxB,sBACpBI,cAAa,mCAA+BJ,EAA/B,0BACbK,kBAAkB,0BAAD,OAA2BL,EAA3B,mBACjBM,kBAAkB,0BAAD,OAA2BN,EAA3B,mBACjBO,kBAAkB,0BAAD,OAA2BP,EAA3B,mBACjBQ,mBAAmB,0BAAD,OAA2BR,EAA3B,sBAClBS,kBAAkB,0BAAD,OAA2BT,EAA3B,oB,MCwDNU,MA9Df,WAAmB,IAkBIC,EAAIC,EAlBT,EAGYpD,mBAAS,IAHrB,mBAGPc,EAHO,KAGAuC,EAHA,KAuBd,OAnBAhD,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACoBb,EAAMc,IAAIkC,EAAQE,sBADtC,cACQnC,EADR,OAEG6C,EACG7C,EAAIC,KAAKC,QACR4C,KAAKC,MAAMD,KAAKE,SAAWhD,EAAIC,KAAKC,QAAQ+C,OAAO,KAEvD/B,QAAQC,IAAInB,GANf,kBAOUA,GAPV,4CADc,uBAAC,WAAD,wBAUdG,KACC,IASC,4BAAQC,UAAU,SAClB8C,MAAO,CACHC,eAAe,QACfC,gBAAgB,4CAAD,cAA6C9C,QAA7C,IAA6CA,OAA7C,EAA6CA,EAAO+C,cAApD,MACfC,mBAAmB,kBAIvB,yBAAKlD,UAAU,kBACX,wBAAIA,UAAU,iBACR,OAALE,QAAK,IAALA,OAAA,EAAAA,EAAOjB,SAAP,OAAgBiB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAOG,QAAvB,OAA+BH,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAOiD,gBAEvC,yBAAKnD,UAAU,iBACX,4BAAQA,UAAU,cAAlB,QAIA,4BAAQA,UAAU,cAAlB,YAMJ,wBAAIA,UAAU,uBA7BHuC,EA8BE,OAACrC,QAAD,IAACA,OAAD,EAACA,EAAOkD,SA9BNZ,EA8Be,KA7BxB,OAAHD,QAAG,IAAHA,OAAA,EAAAA,EAAKM,QAASL,EAAKD,EAAIc,OAAO,EAAEb,EAAE,GAAK,MAAQD,KAkCtD,yBAAKvC,UAAU,yB,MCzBRsD,MA7Bf,WAAgB,IAAD,EACoBlE,qBADpB,mBACAmE,EADA,KACMC,EADN,KAgBX,OAdA/D,qBAAU,WAUP,OATAgE,OAAOC,iBAAiB,UAAS,WAC1BD,OAAOE,QAAU,IAChBH,GAAW,GAIXA,GAAW,MAGZ,WACHC,OAAOG,oBAAoB,aAE/B,IAEC,yBAAK5D,UAAS,eAAYuD,GAAQ,cAC9B,yBACAvD,UAAU,UACVmB,IAAI,oEAEJ,gCCEG0C,MApBf,WACE,OACE,yBAAK7D,UAAU,OACb,kBAAC,EAAD,MACD,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAKf,MAAM,mBACXE,YAAU,EACVD,SAAU2C,EAAQE,uBAClB,kBAAC,EAAD,CAAK9C,MAAM,eAAgBC,SAAU2C,EAAQC,gBAC7C,kBAAC,EAAD,CAAK7C,MAAM,aAAcC,SAAU2C,EAAQG,gBAC3C,kBAAC,EAAD,CAAK/C,MAAM,gBAAiBC,SAAU2C,EAAQI,oBAC9C,kBAAC,EAAD,CAAKhD,MAAM,gBAAiBC,SAAU2C,EAAQK,oBAC9C,kBAAC,EAAD,CAAKjD,MAAM,eAAgBC,SAAU2C,EAAQM,oBAC7C,kBAAC,EAAD,CAAKlD,MAAM,iBAAkBC,SAAU2C,EAAQO,qBAC/C,kBAAC,EAAD,CAAKnD,MAAM,eAAgBC,SAAU2C,EAASQ,sBCfnDyB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.4e14afa4.chunk.js","sourcesContent":["import axios from \"axios\"\r\nconst instance =axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\"\r\n})\r\n\r\nexport default instance;","import React,{useState,useEffect} from 'react'\r\n\r\nimport axios from \"./axios\"\r\nimport \"./Row.css\"\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from \"movie-trailer\"\r\n\r\n\r\nconst base_url=\"https://image.tmdb.org/t/p/original\"\r\nfunction Row({title,fetchURL,isLargeRow}) {\r\n\r\n    const [movies,setMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\")\r\n\r\n    useEffect(()=>{\r\n\r\n        async function fetchdata(){\r\n            const req = await axios.get(fetchURL);\r\n            \r\n            setMovies(req.data.results);\r\n            return req;\r\n\r\n        }\r\n        fetchdata();\r\n\r\n    },[fetchURL]);\r\n    // console.log(movies)\r\n    const options={\r\n        height:\"390\",\r\n        width:\"100%\",\r\n        playersVars:{\r\n            //\r\n            autoplay:1,\r\n        }\r\n    }\r\n    const handleClick =(movie)=>{\r\n        if (trailerUrl) {\r\n            setTrailerUrl('')\r\n\r\n        }\r\n        else {\r\n            movieTrailer(movie?.name || \"\")\r\n            .then(url=>{\r\n                   const urlParams = new URLSearchParams( new URL(url).search);\r\n                   setTrailerUrl  ( urlParams.get('v'))\r\n            \r\n                })\r\n            .catch(error=> console.log(error))\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n            <div className=\"row_posters\">\r\n                {movies.map(movie =>{\r\n                    return(\r\n                    <img \r\n                    onClick={()=> handleClick(movie)}\r\n                    key={movie.id}\r\n                    className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n                    src={`${base_url}${\r\n                        isLargeRow ?\r\n                        movie.poster_path : movie.poster_path}`} alt={movie.name} />\r\n\r\n                    )\r\n                })}\r\n\r\n            </div>\r\n            {trailerUrl && <YouTube \r\n            videoId={trailerUrl} \r\n            opts={options}\r\n               />\r\n             }\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","const API_KEY =\"36d47371423c28e10a8a747f7e67825f\";\r\nconst request = {\r\n\r\n    fetchTrending :`/trending/all/day?api_key=${API_KEY}`,\r\n    fetchNetflixOriginal:`discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchToprated : `/movie/top_rated?api_key=${API_KEY}&language=en-US&page=1`,\r\n    fetchActionMovies:`discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies:`discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies:`discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies:`discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentries:`discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n\r\n}\r\nexport default request;","import React,{useState,useEffect} from 'react'\r\nimport axios from \"./axios\"\r\nimport request from './request'\r\nimport \"./Banner.css\"\r\nfunction Banner() {\r\n\r\n\r\n    const [movie, setMovie] = useState([])\r\n    useEffect(() => {\r\n      async function fetchdata(){\r\n        const req = await axios.get(request.fetchNetflixOriginal)\r\n         setMovie(\r\n            req.data.results[\r\n             Math.floor(Math.random() * req.data.results.length-1) ]\r\n         )\r\n         console.log(req)\r\n         return req;\r\n      }\r\n      fetchdata();\r\n    }, [])\r\n    // console.log(movie)\r\n\r\n    function truncate (str,n){\r\n        return str?.length > n  ? str.substr(0,n-1) + \"...\" : str;\r\n\r\n    }\r\n\r\n    return (\r\n        <header className=\"banner\"\r\n        style={{\r\n            backgroundSize:\"cover\",\r\n            backgroundImage:`url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n            backgroundPosition:\"center center\",\r\n         \r\n            }}\r\n        >\r\n        <div className=\"banner_content\">\r\n            <h1 className=\"banner_title\">\r\n            {movie?.title || movie?.name || movie?.original_name}\r\n            </h1>\r\n            <div className=\"banner_button\">\r\n                <button className=\"banner_btn\">\r\n                    Play\r\n\r\n                </button>\r\n                <button className=\"banner_btn\">\r\n                    My List\r\n\r\n                </button>\r\n\r\n            </div>\r\n            <h1 className=\"banner_description\">\r\n                {truncate(movie?.overview,150)}\r\n              \r\n            </h1>\r\n\r\n        </div>\r\n        <div className=\"banner--fadebottom\">\r\n\r\n        </div>\r\n           \r\n            \r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React, { useState ,useEffect} from 'react'\r\nimport \"./Nav.css\"\r\n\r\nfunction Nav() {\r\n        const [show, handleShow] = useState()\r\n    useEffect(() => {\r\n       window.addEventListener(\"scroll\",()=>{\r\n           if(window.scrollY > 100){\r\n               handleShow(true);\r\n           }\r\n           else\r\n           {\r\n               handleShow(false)\r\n           }\r\n       });\r\n       return ()=>{\r\n           window.removeEventListener(\"scroll\");\r\n       }\r\n    }, [])\r\n    return (\r\n        <div className = {`nav  ${show && \"nav_black\"}`}>\r\n            <img\r\n            className=\"navlogo\"\r\n            src=\"https://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\"\r\n            />\r\n            <img/>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react';\nimport Row from './Row'\nimport './App.css';\nimport Banner from './Banner'\nimport request from \"./request\"\nimport Nav from './Nav'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />\n     <Banner/>\n     <Row title=\"Netflix Original\"\n     isLargeRow \n     fetchURL={request.fetchNetflixOriginal}/>\n     <Row title=\"Trending Now\"  fetchURL={request.fetchTrending}/>\n     <Row title=\"Top Rated \"  fetchURL={request.fetchToprated}/>\n     <Row title=\"Action Movies\"  fetchURL={request.fetchActionMovies}/>\n     <Row title=\"Comedy Movies\"  fetchURL={request.fetchComedyMovies}/>\n     <Row title=\"Horror movie\"  fetchURL={request.fetchHorrorMovies}/>\n     <Row title=\"Romance Movies\"  fetchURL={request.fetchRomanceMovies}/>\n     <Row title=\"Documentries\"  fetchURL={request. fetchDocumentries}/>\n     \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}